#!/usr/bin/env python3

import ncplugin
import NCrystal as NC
import numpy as np
import matplotlib.pyplot as plt

physmodel = ncplugin.PhysicsModel(radius=200.0, thickness=10.0, sld_core=1.0, sld_shell=2.0, sld_solvent=3.0)

nsample = int(1e6)#Warning consumes nsample*8 bytes of memory, so don't be silly
                  #and put to 1e10 (if such large numbers are needed, rewrite
                  #code below as loop which samples e.g. 1e6 at a time).

nbins = 100
muvals = physmodel.sampleScatMu( NC.wl2ekin(2.0), nvalues=nsample )
print(f"Average mu in {float(len(muvals)):g} scattering events (expected for isotropic is ~=0): {muvals.sum()/len(muvals)}")

plt.hist( muvals, bins=nbins, edgecolor='blue',facecolor='blue',alpha=0.4 )

#An isotropic distribution is constant wrt mu:
plt.plot( [-1.0,1.0],[len(muvals)/nbins]*2 ,label = 'Isotropic', color='red' )

plt.title(r'$\mu=\cos(\theta)$' + f' distribution in {float(len(muvals)):g} scattering events')
plt.legend()
plt.show()
