#!/usr/bin/env python3

import ncplugin
import NCrystal as NC
import numpy as np
import matplotlib.pyplot as plt

physmodel = ncplugin.PhysicsModel( sigma=2.0, lambda_cutoff=5.0, R=20.0, length=400.0)

print('cross section @   3.0 Aa : %g barn'%physmodel.calcDiffCrossSection(NC.wl2ekin(3.0)) )
print('cross section @   7.0 Aa : %g barn'%physmodel.calcDiffCrossSection(NC.wl2ekin(7.0)) )
print('cross section @   0.5 eV : %g barn'%physmodel.calcDiffCrossSection( 0.5 ) )
print('cross section @ 0.001 eV : %g barn'%physmodel.calcDiffCrossSection( 0.001 ) )

# wls = np.linspace(5,20,100)
q = np.linspace(1e-3,1,1000)
plt.loglog( q, physmodel.calcDiffCrossSection(q) )
r=50
def sphere_IQ(q, r,scale,deltarho, background):
    qr = q*r
    V = 4*np.pi*r**3/3
    return scale/V*(3*V*deltarho*1e-6*(np.sin(qr)-qr * np.cos(qr))/qr**3)**2 *1e8 + background


plt.loglog(q, sphere_IQ(q, r, 1, 5, 0.001))
plt.xlabel('angstrom$^{-1}$')
plt.ylabel('barn')
plt.show()
